version: '2.1'
services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: client
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d imagesdb" ]
      interval: 5s
      timeout: 5s
      retries: 5

  activemq:
    image: rmohr/activemq:5.10.0
    ports:
      - "61616:61616"
      - "8161:8161"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8161/"]
      interval: 30s
      timeout: 10s
      retries: 5

  service-one:
    build: ./ServiceOne
    ports:
      - "8080:8080"
    depends_on:
      activemq:
        condition: service_healthy

  service-two:
    build: ./ServiceTwo
    ports:
      - "8081:8081"
    depends_on:
      activemq:
        condition: service_healthy

  service-three:
    build: ./ServiceThree
    ports:
      - "8082:8082"
    depends_on:
      activemq:
        condition: service_healthy

  service-four:
    build: ./ServiceFour
    ports:
      - "8083:8083"
    depends_on:
      activemq:
        condition: service_healthy

  service-five:
    build: ./ServiceFive
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/client
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      activemq:
        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  persistence_data:
